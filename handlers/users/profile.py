from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery
from aiogram.utils.markdown import hbold

from keyboards.inline.profile import profile_keyboard, back_to_profile
from loader import dp
from states.states import States
from utils.db_api.db_commands import select_client, update_client_info


@dp.callback_query_handler(text="profile", state='*')
async def show_menu_callback(call: CallbackQuery, state: FSMContext):
    await state.finish()
    user_id = call.message.chat.id
    user = await select_client(user_id)
    if not user.phone:
        phone = f"{hbold('‚ö†Ô∏è –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}"
    else:
        phone = user.phone
    if not user.address:
        address = f"{hbold('‚ö†Ô∏è –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}"
    else:
        address = user.address
    if not user.full_name:
        full_name = f"{hbold('‚ö†Ô∏è –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')}"
    else:
        full_name = user.full_name

    await call.message.edit_text(text="\n".join(
        [
            f'üë§ {hbold(f"–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")}\n',
            f'{hbold("–§–ò–û:")} {full_name}\n',
            f'{hbold("–ê–¥—Ä–µ—Å:")} {address}\n',
            f'{hbold("–¢–µ–ª–µ—Ñ–æ–Ω:")} {phone}\n',
            f'–î–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–∫—É–ø–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ê–¥—Ä–µ—Å, –§–ò–û –∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É —Å –≤–∞–º–∏ –º–æ–∂–Ω–æ —Å–≤—è–∑–∞—Ç—å—Å—è',

        ]
    ), reply_markup=profile_keyboard())


@dp.callback_query_handler(text="change_fio")
async def show_menu_callback(call: CallbackQuery):
    user_id = call.message.chat.id
    user = await select_client(user_id)
    if not user.full_name:
        full_name = f"{hbold('‚ö†Ô∏è –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')}"
    else:
        full_name = user.full_name

    await call.message.edit_text(text="\n".join(
        [
            f'{hbold(f"üè∑ –ò–∑–º–µ–Ω–∏—Ç—å –§–ò–û")}\n',
            f'{hbold("–¢–µ–∫—É—â–µ–µ –§–ò–û:")} {full_name}\n',
            f'–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –§–ò–û –ø–æ–¥ —ç—Ç–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.\n',
            f'‚úÖ –ü—Ä–∏–º–µ—Ä: –°–æ–∫–æ–ª–æ–≤ –ê–Ω—Ç–æ–Ω –ê–Ω—Ç–æ–Ω–æ–≤–∏—á',

        ]
    ), reply_markup=back_to_profile())
    await States.CHANGE_FIO.set()


@dp.message_handler(state=States.CHANGE_FIO)
async def set_fbs_api(message: types.Message):
    await message.delete()
    user_id = message.from_user.id
    fio = message.text
    user = await update_client_info(telegram_id=user_id, fio=fio)
    if not user.full_name:
        full_name = f"{hbold('‚ö†Ô∏è –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')}"
    else:
        full_name = user.full_name

    await message.answer(text="\n".join(
        [
            f'{hbold(f"üè∑ –ò–∑–º–µ–Ω–∏—Ç—å –§–ò–û")}\n',
            f'{hbold("–¢–µ–∫—É—â–µ–µ –§–ò–û:")} {full_name}\n',
            f'–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –§–ò–û –ø–æ–¥ —ç—Ç–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.\n',
            f'‚úÖ –ü—Ä–∏–º–µ—Ä: –°–æ–∫–æ–ª–æ–≤ –ê–Ω—Ç–æ–Ω –ê–Ω—Ç–æ–Ω–æ–≤–∏—á',

        ]
    ), reply_markup=back_to_profile())


@dp.callback_query_handler(text="change_address")
async def show_menu_callback(call: CallbackQuery):
    user_id = call.message.chat.id
    user = await select_client(user_id)
    if not user.address:
        address = f"{hbold('‚ö†Ô∏è –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}"
    else:
        address = user.address

    await call.message.edit_text(text="\n".join(
        [
            f'{hbold(f"üì® –ò–∑–º–µ–Ω–∏—Ç—å –ê–¥—Ä–µ—Å")}\n',
            f'{hbold("–¢–µ–∫—É—â–∏–π –ê–¥—Ä–µ—Å:")} {address}\n',
            f'–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∞–¥—Ä–µ—Å –ø–æ–¥ —ç—Ç–∏–º —Å–æ–æ–±—à–µ–Ω–∏–µ–º.\n',
            f'‚úÖ –ü—Ä–∏–º–µ—Ä: –ë–æ–ª—å—à–∞—è –ù–∏–∫–∏—Ç—Å–∫–∞—è —É–ª–∏—Ü–∞, –≥.–ú–æ—Å–∫–≤–∞ –¥.8, –∫–≤.56',

        ]
    ), reply_markup=back_to_profile())
    await States.CHANGE_ADDRESS.set()


@dp.message_handler(state=States.CHANGE_ADDRESS)
async def set_fbs_api(message: types.Message):
    await message.delete()
    user_id = message.from_user.id
    address = message.text
    user = await update_client_info(telegram_id=user_id, address=address)
    if not user.address:
        address = f"{hbold('‚ö†Ô∏è –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')}"
    else:
        address = user.address

    await message.answer(text="\n".join(
        [
            f'{hbold(f"üì® –ò–∑–º–µ–Ω–∏—Ç—å –ê–¥—Ä–µ—Å")}\n',
            f'{hbold("–¢–µ–∫—É—â–∏–π –ê–¥—Ä–µ—Å:")} {address}\n',
            f'–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∞–¥—Ä–µ—Å –ø–æ–¥ —ç—Ç–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.\n',
            f'‚úÖ –ü—Ä–∏–º–µ—Ä: –ë–æ–ª—å—à–∞—è –ù–∏–∫–∏—Ç—Å–∫–∞—è —É–ª–∏—Ü–∞, –≥.–ú–æ—Å–∫–≤–∞ –¥.8, –∫–≤.56',

        ]
    ), reply_markup=back_to_profile())


@dp.callback_query_handler(text="change_phone")
async def show_menu_callback(call: CallbackQuery):
    user_id = call.message.chat.id
    user = await select_client(user_id)
    if not user.phone:
        phone = f"{hbold('‚ö†Ô∏è –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}"
    else:
        phone = user.phone

    await call.message.edit_text(text="\n".join(
        [
            f'{hbold(f"üì± –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω")}\n',
            f'{hbold("–¢–µ–∫—É—â–∏–π —Ç–µ–ª–µ—Ñ–æ–Ω:")} {phone}\n',
            f'–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω –ø–æ–¥ —ç—Ç–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.\n',
            f'‚úÖ –ü—Ä–∏–º–µ—Ä: 79779567811',

        ]
    ), reply_markup=back_to_profile())
    await States.CHANGE_PHONE.set()


@dp.message_handler(state=States.CHANGE_PHONE)
async def set_fbs_api(message: types.Message):
    await message.delete()
    user_id = message.from_user.id
    phone = message.text
    user = await update_client_info(telegram_id=user_id, phone=phone)
    if not user.phone:
        phone = f"{hbold('‚ö†Ô∏è –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')}"
    else:
        phone = user.phone

    await message.answer(text="\n".join(
        [
            f'{hbold(f"üì± –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω")}\n',
            f'{hbold("–¢–µ–∫—É—â–∏–π —Ç–µ–ª–µ—Ñ–æ–Ω:")} {phone}\n',
            f'–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω –ø–æ–¥ —ç—Ç–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.\n',
            f'‚úÖ –ü—Ä–∏–º–µ—Ä: 79779567811',

        ]
    ), reply_markup=back_to_profile())
